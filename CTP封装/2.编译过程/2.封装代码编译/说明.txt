VS构建项目注意事项
1.复制相应的jni.h jni_md.h 到编译器目录,或修改cpp中头文件查找方式。这些文件来自JDK
	例如 C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\include\jni.h
2.项目属性->配置属性->C/C++->代码生成->运行库 选择：多线程（/MT）

3.项目属性->配置属性->常规->平台工具集 请根据实际需要选择,对应编译器目录应有步骤一中复制后的JDK头文件

4.项目属性->配置属性->C/C++->预编译头->预编译头 不使用编译头

5.项目属性->配置管理器（右上角）->根据需要可全改为Release x64

6.（非必要）项目属性->配置属性->C/C++->预处理器->预处理器定义->编辑 在新的一行加上 _CRT_SECURE_NO_WARNINGS


//////////////////////////////////////
Windows 
	iconv.h头文件来自项目libiconv-1.15-for-windows-vs2017-project
Linux 
	iconv.h头文件来自libiconv-1.15.tar.gz
编译略有区别，但函数一致,因此之前生成的C++代码可不做修改跨平台
/////////////////////////////////////////
结算单乱码的解决方案
结算单乱码的主要原因是分段按byte截断传输，不考虑unicode可能多个byte的情况，因此中途转码会丢失数据，一个简单的解决方案，在Java中还原为byte[] 拼接，然后再new String ，使用编码GB2312,此问题便解决



1.在生成的CPP中
搜索
CThostFtdcSettlementInfoField_1Content_1get
将返回类型改为jbyteArray 
将函数内容替换为
/////////////////////////////////////
  jbyteArray jresult = 0 ;
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CThostFtdcSettlementInfoField **)&jarg1; 
  result = (char *) ((arg1)->Content);
  {
	  if (result) {
		  jresult = jenv->NewByteArray( strlen(result));
		  jenv->SetByteArrayRegion(jresult, 0, strlen(result), (jbyte*)result);
	  }

  }
  return jresult;

/////////////////////////////////////

2.手动将CThostFtdcSettlementInfoField.java文件中的函数 getContent()方法的返回类型改为byte[],将其调用的其他类的方法的返回类型也改为byte[]直到无错为止

3.在java中，在没有返回last标记之前，存储所有byte[],返回标记之后拼接为一个大byte[] 使用new String(contentBytes,"GBK")，便可得到完全正确的结算单

